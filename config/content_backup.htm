<h1>Weeks</h1>
<h3>week1~9</h3>
<p><strong><span style="color: #ff0000;">Week1</span></strong></p>
<p><span style="color: #000000;"><strong>建立個人倉儲cd2020</strong></span></p>
<p><span style="color: #000000;">1.<span>登入自己的github帳號，創建新的倉儲cd2020</span><span><br/></span><span>2.輸入</span><span>git clone  <span>https://github.com/s40723218/cd2020<span> 複製</span></span>個人倉儲至資料夾<span><br/>3.輸入git submodule add https://github.com/mdecourse/cmsimde.git 取得子模組資料。<br/>4.將up_dir的所有項目複<span>製到cd2020裡面</span><br/>5.完成後，python wsgi.py 開始編輯個人網站<br/>6.編輯完成後即可git status<span><span> </span>&gt;</span><span> </span>git add .<span><span> </span>&gt;</span><span> </span>git commit -m "    "<span><span>  </span>&gt;</span><span> </span>git push   </span></span></span></p>
<p><span color="#000000" style="color: #000000;"><strong><span style="color: #ff0000;">Week2</span></strong></span></p>
<p><span color="#000000" style="color: #000000;"><strong><span>將可攜系統的 python3.7.3更新至 python3.8.2 版本</span></strong></span></p>
<p><span color="#000000" style="color: #000000;">1.在cd2020裡面新增一個data資料夾，然後在data裡面新增資料夾py382及wscite432、portablegit。</span></p>
<p><span color="#000000" style="color: #000000;">2..進入<a href="https://www.python.org/" style="color: #000000;">Python</a>官網。<span color="#808080">點Downloads下的<a href="https://www.python.org/downloads/windows/" style="color: #000000;">Windows</a>，並選<a href="https://www.python.org/downloads/release/python-382/" style="color: #000000;">Latest Python 3 Release - Python 3.8.2</a>。</span></span></p>
<p><span color="#000000" style="color: #000000;"><span color="#808080">3.下載<a href="https://www.python.org/ftp/python/3.8.2/python-3.8.2-amd64.exe" style="color: #000000;">Windows x86-64 executable installer</a>。</span></span></p>
<p><span color="#000000" style="color: #000000;"><span color="#808080">4.把pip選項取消，接著案next到py382</span></span></p>
<p><span color="#000000" style="color: #000000;"><span color="#808080">5.下載SciTE系統 <a href="https://www.scintilla.org/wscite432.zip" style="color: #000000;">full 64-bit download</a>，下載完後解壓縮至data下的wscite432</span></span></p>
<p><span color="#000000" style="color: #000000;">6.建立新的start.bat及stop.bat。</span></p>
<p><span style="color: #000000;">7.下載MSYS2 <a class="button" href="http://repo.msys2.org/distrib/x86_64/msys2-x86_64-20190524.exe" style="color: #000000;">msys2-x86_64-20190524.exe</a> 至data下。</span></p>
<p><span style="color: #000000;">8.下載PortableGit <a href="https://github.com/git-for-windows/git/releases/download/v2.25.1.windows.1/PortableGit-2.25.1-64-bit.7z.exe" style="color: #000000;">64-bit Git for Windows Portable</a> 至portablegit下。</span></p>
<p><span style="color: #000000;"><span color="#000000">9.安裝到</span><a href="https://bootstrap.pypa.io/get-pip.py" style="color: #000000;">https://bootstrap.pypa.io/get-pip.py</a>頁面，另存新檔到data下。</span></p>
<p><span color="#000000" style="color: #000000;">10開啟start.bat 輸入指令<code class="py plain">python get</code><code class="py keyword">-</code><code class="py plain">pip.py以及pip install flask bs4 lxml pelican markdown flask_cors leo 就完成了</code></span></p>
<p><span color="#000000" style="color: #000000;"><code class="py plain"><strong><span style="color: #ff0000;">Week3</span></strong></code></span></p>
<p><span><span><span></span></span></span></p>
<p><span style="color: #000000;"><span><span> </span></span></span></p>
<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>