var tipuesearch = {"pages": [{'title': 'Weeks', 'text': 'week1~5 \n week6-9 \n week10~14 \n week15~18 \n', 'tags': '', 'url': 'Weeks.html'}, {'title': 'week1~5', 'text': 'Week1 \n 建立個人倉儲及編輯網站 \n 1. 登入自己的github帳號，創建新的倉儲cd2020 2.輸入 git clone \xa0 https://github.com/s40723218/cd2020 \xa0複製 個人倉儲至資料夾 3.輸入git submodule add https://github.com/mdecourse/cmsimde.git 取得子模組資料。 4.將up_dir的所有項目複 製到cd2020裡面 5.完成後，python wsgi.py 開始編輯個人網站 6.編輯完成後即可git status \xa0 > \xa0 git add . \xa0 > \xa0 git commit -m "\xa0 \xa0 " \xa0\xa0 > \xa0 git push\xa0 \xa0 \n 操作影片 \n \n Week2 \n 將可攜系統的 python3.7.3更新至 python3.8.2 版本 \n 1.在cd2020裡面新增一個data資料夾，然後在data裡面新增資料夾py382及wscite432、portablegit。 \n 2..進入 Python 官網。 點Downloads下的 Windows ，並選 Latest Python 3 Release - Python 3.8.2 。 \n 3.下載 Windows x86-64 executable installer 。 \n 4.把pip選項取消，接著案next到py382 \n 5.下載SciTE系統\xa0 full 64-bit download ，下載完後解壓縮至data下的wscite432 \n 6.建立新的start.bat及stop.bat。 \n 7.下載MSYS2\xa0 msys2-x86_64-20190524.exe \xa0至data下。 \n 8.下載PortableGit\xa0 64-bit Git for Windows Portable \xa0至portablegit下。 \n 9.安裝到 https://bootstrap.pypa.io/get-pip.py 頁面，另存新檔到data下。 \n 10開啟start.bat 輸入指令python get-pip.py以及pip install flask bs4 lxml pelican markdown flask_cors leo 就完成了 \n 完成圖 \n \n 第三組第一次會議 \n 會議流程: \n 1.直播會議，組員簽到 \n 2.組員分配工作 \n 3.問題提問 \n 作業一: 1.請描述如何針對該課程進行有效的隨機分組，或者隨機進行點名？ 2.描述如何為Windows 10 64位系統準備一個可移植的Python編程系統，以允許在Github上維護CMSiMDE網站，Pelican博客和js演示文稿？ 3.您需要從 http://www.coppeliarobotics.com/helpFiles/index.html 了解什麼來實現四輪機器人？ \n 工作分配表: \n \n 會議影片: \n \n Week3 \n 請描述如何針對該課程進行有效的隨機分組，或者隨機進行點名？ \n 1.去網站  http://mde.tw/cd2020/content/Grouping.html \n 2.點  Dart source code for random grouping \n 3.去HTML更改為我們班的路徑 \n 4.點Run即完成亂數分組. \n 完成圖 \n \n 操作影片 \n \n Week4 \n 完成 Assingment1.pdf \n', 'tags': '', 'url': 'week1~5.html'}, {'title': 'week6~9', 'text': '\xa0 Week6 \n Topic 1: Mechanical Design Process 翻譯 (負責章節4.1~4.5) \n Chapter 4 Materials and\xa0Processes \n 第三組第二次會議 \n 作業二: \n \n 根據主題0和主題1的素材，您能否具體描述機械設計團隊為了完成作業1的四輪機器人需要做些什麼? \n 您需要從 https://cyberbotics.com/doc/guide/index 了解什麼來實現四輪機器人？ \n \n 工作分配表: \n \n 會議影片 \n \n Week7 \n Python remote api  安裝模組 1.pip install opencv-python 2.pip install imutils 3.pip install numpy \n 解決leo閃退問題 \n 1.輸入pip list \n 2.輸入pip uninstall leo\xa0 \n 3.輸入pip install leo==6.2.1 \n Week8 \n V-rep更新版本 \n 1.至官方網站: https://www.coppeliarobotics.com 的Downloads下載 2.下載可攜版: CoppeliaSim Edu, Binaries \n \xa0 \n Week9 \n 期中個人影片 \n \n \n', 'tags': '', 'url': 'week6~9.html'}, {'title': 'week10~14', 'text': 'Week10 \n 第三組第三次會議 \n 作業三 :\xa0 \n 根據對 Topic2 和 Topic3 的閱讀，使用 CoppeliaSim、 \n Webots、Onshape 提出一個機電一體化項目。 \n 工作分配表: \n \n 會議影片: \n \n gm用戶登錄設置 \n 操作影片: \n \n Week11 \n Ubuntu設定及API連線 \n 1.下載 vitualbox 、 ubuntu 、 CoppeliaSim 。 2.打開vitualbox並導入ubuntu。 3.更改虛擬主機的網路埠號。 4.設定完成後啟動ubuntu密碼為kmol2020，然後開啟lxterminal。 5.輸入xterm&再輸入ls 輸入cd coppeliasim4_rev4->ls->cd CoppeliaSim_Edu_v4_0_0_Ubuntu18_04->ls->./coppeliaSim.sh。 6.開啟後打開檔案sdc.ttt。 7.開啟下載好的CoppeliaSim四輪車控制器檔案。 \n 操作影片 \n \n 以ssh對Github連線 \n 1.將portablegit將sh_for_solvespace檔案複製並修改成sh.exe。 2.開啟start_mdecourse.bat並輸入sh及ssh-keygen -t rsa -b 4096 -C "40723218"產生key 3.下載 putty.7z SSH 連線工具組 ， puttygen.exe 將上述建立的 Openssh keys 轉為 putty 可以辨識的格式。 4.修改啟動的 start.bat 加入下列設定:set GIT_HOME=%Disk%:\\portablegit\\bin\\ set GIT_SSH=%Disk%:\\putty\\plink.exe 5.將要使用 ssh 連線的倉儲 .git 中的 config 檔案中的 url 設定改為 ssh 連線格式:url = git@github.com:倉儲名稱/cd2020.git。 6.開啟 putty.exe 建立 session >github.com, 指定 Connection > Proxy 與 Connection > SSH > Auth。 7.將下列字串加入編輯器並存儲到y:\\home\\.ssh\\config: Host github.com \xa0 \xa0 User git \xa0 \xa0 Port 22 \xa0 \xa0 Hostname github.com \xa0 \xa0 TCPKeepAlive yes \xa0 \xa0 IdentitiesOnly yes 8.將建的OpenSSH的public key內容,送到Github帳號SSH settings中。 \n 操作影片 \n \n 第三組第四次會議 \n 會議影片 \n \n Week12 \n IPv4 Ubuntu對外連線設定操作 \n 1.點選檔案>喜好設定>網路>新增一個新的NAT網路。 2.編輯NAT網路>連接埠轉送>新增4個新的連接埠轉送埠號。 3.設定主機IP為127.0.0.1；客體IP為10.0.2.4；主機連接埠為22、19999、17443、18443；客體連接埠為22、19999、7443、8443。 4設定主機網路為NAT Network。 5.設定完後啟動，密碼是kmol2020。 6.開啟LXTermial，輸入ifconfig>輸入sudo apt install net-tools>密碼是kmol2020。 7.cd tmp>ls>輸入ping 127.0.0.1測試>cd cd2020pj1>git pull。 8.輸入sudo vi wsgi.py編輯內容，按i進行編輯。將近端的host改為10.0.2.4，接著按Esc並輸入:wq存儲。 9.開啟leo，並開啟cd2020pj1.leo，點選Nav搜尋allowExt。 10.點選fileuploadfrom，並將第10行新增一個ttt檔，完成後存儲並關閉leo。 11.cd..,接著在tmp下新增oauth_scrum.txt，輸入sudo vi oauth_scrum.txt。 12.按i編輯，內容先隨便輸入，接著按Esc並輸入:wq存儲。 13.cd cd2020pj1，並輸入python3 wsgi.py啟動。 14.網址為https:/127.0.0.1:18443/alogin。 15.帳號及密碼都為admin，進入後點選fileuploadform，點選要上傳的ttt檔。 16.點選download list檢查檔案是否上傳完成。 \n 操作影片 \n \n 第三組第五次會議 \n 會議影片 \n \n week12抽點網站: http://mde.tw/cdbw12-3/content/index.html \n week12抽點倉儲: https://github.com/mdecourse/cdbw12-3 \n Week13 \n IPv6 遠端控制設定 \n 1.打開w13_ipv6_assignment.txt，內有ipv6遠端控制說明。 2.設定IPv6網路。 3.點選IPv6內容，IPv6位址輸入2001:288:6004:17:2020:2::7218 4.子網路首碼長度64、預設匝道輸入2001:288:6006:17::254。 5.開啟虛擬主機，設定整體系統埠號，將主機IP改為個人IP。 6.啟動Ubuntu輸入密碼kmol2020。 7.開啟LXTermial，並進入cd2020pj1。 8.git pull檢查有無新版本，cd docs/cmsimde。 9.輸入vi wsgi.py，將host改為個人主機IP(按i編輯，按Esc輸入:wq存儲)。 10.在另一台主機開啟putty，輸入預連線主機IP。 11.設定SSH下的X11設定完成後存儲，在打開即可連線該主機。 12.輸入帳密kmol2020，打開XLaunch.exe並輸入xterm&啟動。 13.進入tmp/cd2020pj1/docs/cmsimde，輸入python3 wsgi.py開啟遠端網址為[該主機IP]:17443 \n Week14 \n week14:抽點網站:http://mde.tw/cdbw14-2/content/index.html \n week14:抽點倉儲: https://github.com/mdecourse/cdbw14-2 \n', 'tags': '', 'url': 'week10~14.html'}, {'title': 'week15~18', 'text': 'Week15 \n FileZilla虛擬主機文件共享設置 \n 1.下載 FileZilla 2.打開Ubuntu，確認整體系統埠號然後打開putty\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0  \n 3.設置預連接IP為個人主機IP4並設置SSH中的X11，將啟用X11 fowarding打勾並在X顯示位置中輸入本地主機：0.0。存儲完打開。\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0  \n 4.開啟FileZilla，點選檔案>站台管理員>添加站台個人主機IP 5.將協定替換為SFTP-SSH，主機輸入個人主機IP及連接埠輸入22 將登錄類型更改為密碼，用戶命名為kmol2020 6.設定完成後，點選連線， 即完成FileZilla虛擬主機文件共享設置 \n Week16 \n IPv6對外連線個人倉儲 \n 1.修改IPv6網路設定及虛擬主機網路設定。 2.開啟虛擬主機，打 開Lxterminal，在tmp下git clone\xa0\xa0 https://github.com/s40723218/cd2020 3.輸入ifconfig看自己IPv6的地址。 4.進入cd2020/cmsimde輸入sudo vi wsgi.py,將host改為IPv6地址。 5.完成後存儲，然後輸入python3 wsgi.py啟動。 6.輸入網址https://[2001:288:6004:17:2020:2:0:7228]:19443就完成了 \n Week18 \n 期末個人簡報 \n \n', 'tags': '', 'url': 'week15~18.html'}, {'title': 'Assignment', 'text': '', 'tags': '', 'url': 'Assignment.html'}, {'title': 'Assignment 1', 'text': 'Assignment 1 \n', 'tags': '', 'url': 'Assignment 1.html'}, {'title': 'Assignment 2', 'text': 'Assignment 2 \n', 'tags': '', 'url': 'Assignment 2.html'}, {'title': 'Assignment 3', 'text': 'Assignment 3 \n', 'tags': '', 'url': 'Assignment 3.html'}, {'title': 'Final project', 'text': 'Final project\xa0 \n \n', 'tags': '', 'url': 'Final project.html'}, {'title': 'About', 'text': '此內容管理系統以\xa0 https://github.com/mdecourse/cmsimde \xa0作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作. \n 利用 cmsimde 建立靜態網誌方法: \n 1. 在 github 建立倉儲, git clone 到近端 \n 2. 參考\xa0 https://github.com/mdecourse/newcms , 加入除了 cmsimde 目錄外的所有內容 \n 以 git submodule add\xa0 https://github.com/mdecourse/cmsimde \xa0cmsimde \n 建立 cmsimde 目錄, 並從 github 取下子模組內容. \n 3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器. \n 動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端. \n 4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行: \n git clone --recurse-submodules  https://github.com/mdecourse/newcms.git \n', 'tags': '', 'url': 'About.html'}, {'title': 'Develop', 'text': 'https://github.com/mdecourse/cmsimde \xa0的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443\xa0就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容. \n cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版. \n init.py 位於\xa0 up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數. \n', 'tags': '', 'url': 'Develop.html'}]};